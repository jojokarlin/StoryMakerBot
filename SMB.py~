#!/usr/bin/env python
# -*- coding: utf-8 -*-

import random

character = [
    "girl",
    "boy",
    "hero",
    "heroine",
    "sacrificial redeemer",
    "teen crusader",
    "zombie",
    "witch",
    "wizard",
    "werewolf",
    "vampire",
    "teen",
]

adverb = [
    "accidentally",
    "always",
    "angrily",
    "anxiously",
    "awkwardly",
    "badly",
    "blindly",
    "boastfully",
    "boldly",
    "bravely",
    "brightly",
    "cheerfully",
    "coyly",
    "crazily",
    "defiantly",
    "deftly",
    "deliberately",
    "devotedly",
    "doubtfully",
    "dramatically",
    "dutifully",
    "eagerly",
    "elegantly",
    "enormously",
    "evenly",
    "eventually",
    "exactly",
    "faithfully",
    "finally",
    "foolishly",
    "fortunately",
    "frantically",
    "frequently",
    "gleefully",
    "gracefully",
    "happily",
    "hastily",
    "honestly",
    "hopelessly",
    "hourly",
    "hungrily",
    "innocently",
    "inquisitively",
    "irritably",
    "jealously",
    "justly",
    "kindly",
    "lazily",
    "loosely",
    "madly",
    "merrily",
    "mortally",
    "mysteriously",
    "nervously",
    "never",
    "obediently",
    "obnoxiously",
    "occasionally",
    "often",
    "only",
    "perfectly",
    "politely",
    "poorly",
    "powerfully",
    "promptly",
    "quickly",
    "rapidly",
    "rarely",
    "really",
    "regularly",
    "rudely",
    "safely",
    "seldom",
    "selfishly",
    "seriously",
    "shakily",
    "sharply",
    "silently",
    "slowly",
    "solemnly",
    "sometimes",
    "speedily",
    "steadily",
    "sternly",
    "technically",
    "tediously",
    "tenderly",
    "terrifically",
    "tightly",
    "totally",
    "tremendously",
    "unexpectedly",
    "usually",
    "victoriously",
    "vivaciously",
    "warmly",
    "wearily",
    "weekly",
    "wildly",
    "yearly",
    ]

verb = [
    "devour",	
    "digest",	
    "dine",	
    "drain",	
    "gorge",	
    "guzzle",	
    "indulge",	
    "inhale",	
    "slurp",	
    "nibble",	
    "boast",	
    "announce",	
    "comment",	
    "declare",	
    "utter",	
    "gasp",	
    "huff",	
    "sigh",	
    "snap",	
    "guffaw",	
    "snicker",	
    "bellow",	
    "holler",	
    "howl",	
    "lament",	
    "shriek",	
    "wail",	
    "blabber",	
    "bluster",	
    "gush",	
    "scoff",	
    "snuffle",	
    "squeal",	
    "inquire",	
    "implore",	
    "plead",	
    "require",	
    "instruct",	
    "demand",	
    "encourage",	
    "impress",	
    "manipulate",	
    "persuade",	
    "insult",	
    "leach",	
    "neglect",	
    "outrage",	
    "overrule",	
    "pacify",	
    "confuse",	
    "confound",	
    "dazzle",	
    "deceive",	
    "conceal",	
    "crave",	
    "desire",	
    "wish",	
    "imagine",	
    "exhaust",	
    "excite",	
    "ignite",	
    "petrify",	
    "startle",	
    "deter",	
    "forbid",	
    "halt",	
    "chase",	
    "follow",	
    "obey",	
    "pursue",	
    "arrive",	
    "exit",	
    "journey",	
    "traverse",	
    "venture",	
    "ascend",	
    "mount",	
    "scale",	
    "burrow",	
    "sink",	
    "assault",	
    "disarm",	
    "cleave",	
    "dismantle",	
    "corrupt",	
    "ruin", 
    "craft",	
    "create",	
    "design",	
    "manufacture",	
    "gel",	
    "liquefy",	
    "brew",	
    "extract",	
    "alter",	
    "evolve",	
    "modify",	
    "morph",	
    "enjoy",	
    "relish",	
    "gloat",	
    "wallow",	
    "adore",	
    "amuse",	
    "cherish",	
    "treasure",	
    "despise",	
    "loathe",	
    "dwell",	
    "occupy",	
    "admire",	
    "gaze",	
    "peek",	
    "peer",	
    "bargain",	
    "deal",	
    "plot",	
    "conspire",	
    "cascade", 
    "flow",	
    "ooze",	
    "spatter",	
    "spew",	
    "sprinkle",	
    "float",	
    "glide",	
    "cast",	
    "catapult",	
    "hurl",	
    "lob",	
    "nudge",	
    "prod",	
    "jab",	
    "poke",	
    "smudge",	
    "stroke",	
    "loaf",	
    "lounge",	
    "amble",	
    "creep",	
    "dawdle",	
    "lope",	
    "stagger",	
    "bolt",	
    "scurry",	
    "flounce",	
    "stroll",	
    "stride",	
    "meander",	
    "plod",	
    "saunter",	
    "stalk",	
    "wander",	
    ]

preposition = [
    "on",
    "with",
    "after",
    "beside",
    "along with",
    "instead of",
    "for",
    "behind",
    ]

adj = [
    "hungry",
    "angry",
    "wandering",
    "magical",
    "mysterious",
    "anomalous",
    "rambunctious",
    "cantankerous",
        ]
obj = [
    "girl",
    "king",
    "dog",
    "giant",
    "robot",
    "zombie",
    ]

def story_gen():
    return("A %s %s %ss %s a %s %s." %(random.choice(character),random.choice(adverb),random.choice(verb),random.choice(preposition), random.choice(adj),random.choice(obj)))

print(story_gen())

tfile = open("tweets.txt", "w")
for numtweets in range(0,100):
    tfile.write(story_gen())
    tfile.write("\n")

tfile.close()
